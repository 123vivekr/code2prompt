name: Release

env:
  PROJECT_NAME: code2prompt
  PROJECT_DESC: "A command-line tool to generate an LLM prompt from codebases of any size, fast."
  PROJECT_AUTH: "mufeedvh"

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          # { os, target, cargo-options, features, use-cross, toolchain }
          - { os: ubuntu-latest  , target: arm-unknown-linux-gnueabihf , use-cross: use-cross }
          - { os: ubuntu-latest  , target: aarch64-unknown-linux-gnu   , use-cross: use-cross }
          - { os: ubuntu-latest  , target: i686-unknown-linux-gnu      , use-cross: use-cross }
          - { os: ubuntu-latest  , target: i686-unknown-linux-musl     , use-cross: use-cross }
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-gnu    , use-cross: use-cross }
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-musl   , use-cross: use-cross }
          - { os: macos-latest   , target: x86_64-apple-darwin         }
          - { os: windows-latest , target: i686-pc-windows-gnu         }
          - { os: windows-latest , target: i686-pc-windows-msvc        }
          - { os: windows-latest , target: x86_64-pc-windows-gnu       }
          - { os: windows-latest , target: x86_64-pc-windows-msvc      }
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}
        override: true
        default: true
    - name: Build release binary
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.job.use-cross }}
        command: build
        args: --release --target ${{ matrix.job.target }}
    - name: Strip release binary (unix)
      if: matrix.job.target != 'x86_64-pc-windows-msvc'
      run: strip "target/${{ matrix.job.target }}/release/code2prompt"
    - name: Get latest release
      id: latest_release
      uses: actions/github-script@v6
      with:
        script: |
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1
          });
          return releases.data[0].id;
    - name: Upload release archive
      uses: softprops/action-gh-release@v1
      with:
        release_id: ${{ steps.latest_release.outputs.result }}
        files: |
          target/${{ matrix.job.target }}/release/code2prompt${{ matrix.job.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
